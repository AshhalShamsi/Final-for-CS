import java.util.HashMap;
import java.util.ArrayList;

/**
 * This class is generated by the env3d plugin to make
 * it easier to work with models.  It scans a model
 * directory for all the obj files and organized them.
 */
public class Boss
{
    // The various states of this model.  Each animation is a state
    public static final int DIE = 0;
    public static final int SWIPE = 1;
    public static final int FLINCH = 2;
    public static final int IDLE = 3;
    public static final int ROAR = 4;
    public static final int STOMP = 5;
    public static final int RUN = 6;
    // The main data structure for animated models, a HashMap of ArrayList
    private HashMap<Integer, ArrayList<String>> modelsMap = new HashMap<Integer, ArrayList<String>>();

    //Fields for state management
    private int state;
    private int frame;

    // Required env3d fields
    private double x, y, z, rotateX, rotateY, rotateZ, scale = 1;
    private String texture, model;

    /**
     * Zero-argument constructor that places the object in location 0, 0, 0
     */
    public Boss()
    {
        this(0,0,0);
    }

    /**
     * Parameterized constructor - allows arbitary of object
     */
    public Boss(double x, double y, double z)
    {
        this.x = x;
        this.y = y;
        this.z = z;
        texture = "models/Boss/boss.png";
        model = "models/Boss/boss.obj";
        // initialize the animation HashMap
        init();
    }

    /** 
     * Basic implementation. Simply animate the model
     * based on the state 
     */ 
    public void move() 
    {
        model = modelsMap.get(state).get(frame);
        frame = (frame+1) % modelsMap.get(state).size();
    }

    /**
     * Returns the current animation state
     */
    public int getState()
    {
        return state;
    }

    /**
     * Sets the current animation state.  Resets frame counter to 0
     * Note: it only sets the state if new state is different than
     * the current state
     */
    public void setState(int newState)
    {
        if (state != newState) {
            frame = 0;
            state = newState;
        }
    }

    public double getX() {
        return x;
    }

    public void setX(double x) {
        this.x = x;
    }

    public double getY() {
        return y;
    }

    public void setY(double y) {
        this.y = y;
    }

    public double getZ() {
        return z;
    }

    public void setZ(double z) {
        this.z = z;
    }

    public double getRotateX() {
        return rotateX;
    }

    public void setRotateX(double rotateX) {
        this.rotateX = rotateX;
    }

    public double getRotateY() {
        return rotateY;
    }

    public void setRotateY(double rotateY) {
        this.rotateY = rotateY;
    }

    public double getRotateZ() {
        return rotateZ;
    }

    public void setRotateZ(double rotateZ) {
        this.rotateZ = rotateZ;
    }

    public double getScale() {
        return scale;
    }

    public void setScale(double scale) {
        this.scale = scale;
    }

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public String getTexture() {
        return texture;
    }

    public void setTexture(String texture) {
        this.texture = texture;
    }

    // Initialize the modelsMap hash for animation purpose
    private void init() {
        ArrayList<String> Die = new ArrayList<String>();
        Die.add("models/Boss/Die/bossdie00.obj");
        Die.add("models/Boss/Die/bossdie01.obj");
        Die.add("models/Boss/Die/bossdie02.obj");
        Die.add("models/Boss/Die/bossdie03.obj");
        Die.add("models/Boss/Die/bossdie04.obj");
        Die.add("models/Boss/Die/bossdie05.obj");
        Die.add("models/Boss/Die/bossdie06.obj");
        Die.add("models/Boss/Die/bossdie07.obj");
        Die.add("models/Boss/Die/bossdie08.obj");
        Die.add("models/Boss/Die/bossdie09.obj");
        Die.add("models/Boss/Die/bossdie10.obj");
        Die.add("models/Boss/Die/bossdie11.obj");
        Die.add("models/Boss/Die/bossdie12.obj");
        Die.add("models/Boss/Die/bossdie13.obj");
        Die.add("models/Boss/Die/bossdie14.obj");
        Die.add("models/Boss/Die/bossdie15.obj");
        Die.add("models/Boss/Die/bossdie16.obj");
        Die.add("models/Boss/Die/bossdie17.obj");
        Die.add("models/Boss/Die/bossdie18.obj");
        Die.add("models/Boss/Die/bossdie19.obj");
        Die.add("models/Boss/Die/bossdie20.obj");
        modelsMap.put(DIE,Die);
        ArrayList<String> Swipe = new ArrayList<String>();
        Swipe.add("models/Boss/Swipe/bossswipe00.obj");
        Swipe.add("models/Boss/Swipe/bossswipe01.obj");
        Swipe.add("models/Boss/Swipe/bossswipe02.obj");
        Swipe.add("models/Boss/Swipe/bossswipe03.obj");
        Swipe.add("models/Boss/Swipe/bossswipe04.obj");
        Swipe.add("models/Boss/Swipe/bossswipe05.obj");
        Swipe.add("models/Boss/Swipe/bossswipe06.obj");
        Swipe.add("models/Boss/Swipe/bossswipe07.obj");
        Swipe.add("models/Boss/Swipe/bossswipe08.obj");
        Swipe.add("models/Boss/Swipe/bossswipe09.obj");
        Swipe.add("models/Boss/Swipe/bossswipe10.obj");
        Swipe.add("models/Boss/Swipe/bossswipe11.obj");
        Swipe.add("models/Boss/Swipe/bossswipe12.obj");
        Swipe.add("models/Boss/Swipe/bossswipe13.obj");
        Swipe.add("models/Boss/Swipe/bossswipe14.obj");
        Swipe.add("models/Boss/Swipe/bossswipe15.obj");
        Swipe.add("models/Boss/Swipe/bossswipe16.obj");
        Swipe.add("models/Boss/Swipe/bossswipe17.obj");
        Swipe.add("models/Boss/Swipe/bossswipe18.obj");
        Swipe.add("models/Boss/Swipe/bossswipe19.obj");
        Swipe.add("models/Boss/Swipe/bossswipe20.obj");
        Swipe.add("models/Boss/Swipe/bossswipe21.obj");
        Swipe.add("models/Boss/Swipe/bossswipe22.obj");
        Swipe.add("models/Boss/Swipe/bossswipe23.obj");
        Swipe.add("models/Boss/Swipe/bossswipe24.obj");
        Swipe.add("models/Boss/Swipe/bossswipe25.obj");
        Swipe.add("models/Boss/Swipe/bossswipe26.obj");
        Swipe.add("models/Boss/Swipe/bossswipe27.obj");
        Swipe.add("models/Boss/Swipe/bossswipe28.obj");
        Swipe.add("models/Boss/Swipe/bossswipe29.obj");
        modelsMap.put(SWIPE,Swipe);
        ArrayList<String> Flinch = new ArrayList<String>();
        Flinch.add("models/Boss/Flinch/bossflinch00.obj");
        Flinch.add("models/Boss/Flinch/bossflinch01.obj");
        Flinch.add("models/Boss/Flinch/bossflinch02.obj");
        Flinch.add("models/Boss/Flinch/bossflinch03.obj");
        Flinch.add("models/Boss/Flinch/bossflinch04.obj");
        Flinch.add("models/Boss/Flinch/bossflinch05.obj");
        Flinch.add("models/Boss/Flinch/bossflinch06.obj");
        Flinch.add("models/Boss/Flinch/bossflinch07.obj");
        Flinch.add("models/Boss/Flinch/bossflinch08.obj");
        Flinch.add("models/Boss/Flinch/bossflinch09.obj");
        Flinch.add("models/Boss/Flinch/bossflinch10.obj");
        Flinch.add("models/Boss/Flinch/bossflinch11.obj");
        Flinch.add("models/Boss/Flinch/bossflinch12.obj");
        Flinch.add("models/Boss/Flinch/bossflinch13.obj");
        Flinch.add("models/Boss/Flinch/bossflinch14.obj");
        Flinch.add("models/Boss/Flinch/bossflinch15.obj");
        Flinch.add("models/Boss/Flinch/bossflinch16.obj");
        Flinch.add("models/Boss/Flinch/bossflinch17.obj");
        Flinch.add("models/Boss/Flinch/bossflinch18.obj");
        Flinch.add("models/Boss/Flinch/bossflinch19.obj");
        modelsMap.put(FLINCH,Flinch);
        ArrayList<String> Idle = new ArrayList<String>();
        Idle.add("models/Boss/Idle/bossidle00.obj");
        Idle.add("models/Boss/Idle/bossidle01.obj");
        Idle.add("models/Boss/Idle/bossidle02.obj");
        Idle.add("models/Boss/Idle/bossidle03.obj");
        Idle.add("models/Boss/Idle/bossidle04.obj");
        Idle.add("models/Boss/Idle/bossidle05.obj");
        Idle.add("models/Boss/Idle/bossidle06.obj");
        Idle.add("models/Boss/Idle/bossidle07.obj");
        Idle.add("models/Boss/Idle/bossidle08.obj");
        Idle.add("models/Boss/Idle/bossidle09.obj");
        Idle.add("models/Boss/Idle/bossidle10.obj");
        Idle.add("models/Boss/Idle/bossidle11.obj");
        Idle.add("models/Boss/Idle/bossidle12.obj");
        Idle.add("models/Boss/Idle/bossidle13.obj");
        Idle.add("models/Boss/Idle/bossidle14.obj");
        Idle.add("models/Boss/Idle/bossidle15.obj");
        Idle.add("models/Boss/Idle/bossidle16.obj");
        Idle.add("models/Boss/Idle/bossidle17.obj");
        Idle.add("models/Boss/Idle/bossidle18.obj");
        Idle.add("models/Boss/Idle/bossidle19.obj");
        modelsMap.put(IDLE,Idle);
        ArrayList<String> Roar = new ArrayList<String>();
        Roar.add("models/Boss/Roar/bossroar00.obj");
        Roar.add("models/Boss/Roar/bossroar01.obj");
        Roar.add("models/Boss/Roar/bossroar02.obj");
        Roar.add("models/Boss/Roar/bossroar03.obj");
        Roar.add("models/Boss/Roar/bossroar04.obj");
        Roar.add("models/Boss/Roar/bossroar05.obj");
        Roar.add("models/Boss/Roar/bossroar06.obj");
        Roar.add("models/Boss/Roar/bossroar07.obj");
        Roar.add("models/Boss/Roar/bossroar08.obj");
        Roar.add("models/Boss/Roar/bossroar09.obj");
        Roar.add("models/Boss/Roar/bossroar10.obj");
        Roar.add("models/Boss/Roar/bossroar11.obj");
        Roar.add("models/Boss/Roar/bossroar12.obj");
        Roar.add("models/Boss/Roar/bossroar13.obj");
        Roar.add("models/Boss/Roar/bossroar14.obj");
        Roar.add("models/Boss/Roar/bossroar15.obj");
        Roar.add("models/Boss/Roar/bossroar16.obj");
        Roar.add("models/Boss/Roar/bossroar17.obj");
        Roar.add("models/Boss/Roar/bossroar18.obj");
        Roar.add("models/Boss/Roar/bossroar19.obj");
        Roar.add("models/Boss/Roar/bossroar20.obj");
        Roar.add("models/Boss/Roar/bossroar21.obj");
        Roar.add("models/Boss/Roar/bossroar22.obj");
        Roar.add("models/Boss/Roar/bossroar23.obj");
        Roar.add("models/Boss/Roar/bossroar24.obj");
        Roar.add("models/Boss/Roar/bossroar25.obj");
        Roar.add("models/Boss/Roar/bossroar26.obj");
        Roar.add("models/Boss/Roar/bossroar27.obj");
        Roar.add("models/Boss/Roar/bossroar28.obj");
        Roar.add("models/Boss/Roar/bossroar29.obj");
        modelsMap.put(ROAR,Roar);
        ArrayList<String> Stomp = new ArrayList<String>();
        Stomp.add("models/Boss/Stomp/bossstomp00.obj");
        Stomp.add("models/Boss/Stomp/bossstomp01.obj");
        Stomp.add("models/Boss/Stomp/bossstomp02.obj");
        Stomp.add("models/Boss/Stomp/bossstomp03.obj");
        Stomp.add("models/Boss/Stomp/bossstomp04.obj");
        Stomp.add("models/Boss/Stomp/bossstomp05.obj");
        Stomp.add("models/Boss/Stomp/bossstomp06.obj");
        Stomp.add("models/Boss/Stomp/bossstomp07.obj");
        Stomp.add("models/Boss/Stomp/bossstomp08.obj");
        Stomp.add("models/Boss/Stomp/bossstomp09.obj");
        Stomp.add("models/Boss/Stomp/bossstomp10.obj");
        Stomp.add("models/Boss/Stomp/bossstomp11.obj");
        Stomp.add("models/Boss/Stomp/bossstomp12.obj");
        Stomp.add("models/Boss/Stomp/bossstomp13.obj");
        Stomp.add("models/Boss/Stomp/bossstomp14.obj");
        Stomp.add("models/Boss/Stomp/bossstomp15.obj");
        Stomp.add("models/Boss/Stomp/bossstomp16.obj");
        Stomp.add("models/Boss/Stomp/bossstomp17.obj");
        Stomp.add("models/Boss/Stomp/bossstomp18.obj");
        Stomp.add("models/Boss/Stomp/bossstomp19.obj");
        modelsMap.put(STOMP,Stomp);
        ArrayList<String> Run = new ArrayList<String>();
        Run.add("models/Boss/Run/bossrun00.obj");
        Run.add("models/Boss/Run/bossrun01.obj");
        Run.add("models/Boss/Run/bossrun02.obj");
        Run.add("models/Boss/Run/bossrun03.obj");
        Run.add("models/Boss/Run/bossrun04.obj");
        Run.add("models/Boss/Run/bossrun05.obj");
        Run.add("models/Boss/Run/bossrun06.obj");
        Run.add("models/Boss/Run/bossrun07.obj");
        Run.add("models/Boss/Run/bossrun08.obj");
        Run.add("models/Boss/Run/bossrun09.obj");
        Run.add("models/Boss/Run/bossrun10.obj");
        Run.add("models/Boss/Run/bossrun11.obj");
        Run.add("models/Boss/Run/bossrun12.obj");
        Run.add("models/Boss/Run/bossrun13.obj");
        Run.add("models/Boss/Run/bossrun14.obj");
        Run.add("models/Boss/Run/bossrun15.obj");
        Run.add("models/Boss/Run/bossrun16.obj");
        Run.add("models/Boss/Run/bossrun17.obj");
        Run.add("models/Boss/Run/bossrun18.obj");
        Run.add("models/Boss/Run/bossrun19.obj");
        Run.add("models/Boss/Run/bossrun20.obj");
        Run.add("models/Boss/Run/bossrun21.obj");
        Run.add("models/Boss/Run/bossrun22.obj");
        Run.add("models/Boss/Run/bossrun23.obj");
        Run.add("models/Boss/Run/bossrun24.obj");
        Run.add("models/Boss/Run/bossrun25.obj");
        Run.add("models/Boss/Run/bossrun26.obj");
        Run.add("models/Boss/Run/bossrun27.obj");
        Run.add("models/Boss/Run/bossrun28.obj");
        Run.add("models/Boss/Run/bossrun29.obj");
        modelsMap.put(RUN,Run);
    }

}
